pré requis : 

installer virtualbox via l'installer du site
installer vagrant via l'installer du site

Offline proxy
-------------
install node.js (node-v0.10.26 is ok)
cd <your directory for projects>
git clone https://github.com/bpaquet/offline-proxy.git
npm install 
node proxy

Install Ruby for master-cap in Windows
--------------------------------------
=== Install Ruby ===
* Install http://dl.bintray.com/oneclick/rubyinstaller/rubyinstaller-2.0.0-p451-x64.exe?direct
* Extract http://cdn.rubyinstaller.org/archives/devkits/DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe in C:\DevKit
* cd C:\DevKit
* ruby dk.rb init
* ruby dk.rb install
* gem install bundle
=== Install Chocolatey ===
* @powershell -NoProfile -ExecutionPolicy unrestricted -Command "iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))" && SET PATH=%PATH%;%systemdrive%\chocolatey\bin
* choco sources add -name Nuget -source https://www.nuget.org/api/v2/
=== Install nokogiri prerequisites ===
cinst libxml2
cinst libxslt
cinst libiconv
=== Install master-cap ===
* git clone https://github.com/kitchenware/master-cap
* cd master-cap
* gem install nokogiri -v '1.5.10' -- --with-xml2-include=C:/Chocolatey/lib/libxml2.2.7.8.7/build/native/include --with-xml2-lib=C:/Chocolatey/lib/libxml2.redist.2.7.8.7/build/native/bin/v110/x64/Release/dynamic/cdecl --with-iconv-include=C:/Chocolatey/lib/libiconv.1.14.0.11/build/native/include --with-iconv-lib=C:/Chocolatey/lib/libiconv.redist.1.14.0.11/build/native/bin/v110/x64/Release/dynamic/cdecl --with-xslt-include=C:/Chocolatey/lib/libxslt.1.1.28.0/build/native/include --with-xslt-lib=C:/Chocolatey/lib/libxslt.redist.1.1.28.0/build/native/bin/v110/x64/Release/dynamic
* gem install nokogiri -v '1.5.11' -- --with-xml2-include=C:/Chocolatey/lib/libxml2.2.7.8.7/build/native/include --with-xml2-lib=C:/Chocolatey/lib/libxml2.redist.2.7.8.7/build/native/bin/v110/x64/Release/dynamic/cdecl --with-iconv-include=C:/Chocolatey/lib/libiconv.1.14.0.11/build/native/include --with-iconv-lib=C:/Chocolatey/lib/libiconv.redist.1.14.0.11/build/native/bin/v110/x64/Release/dynamic/cdecl --with-xslt-include=C:/Chocolatey/lib/libxslt.1.1.28.0/build/native/include --with-xslt-lib=C:/Chocolatey/lib/libxslt.redist.1.1.28.0/build/native/bin/v110/x64/Release/dynamic

* gem install bundle
* bundle
* Installer vagrant avec l'installer natif trouvé sur le site

clonez perfuniversity
git clone git@bitbucket.org:henri_tremblay/perfuniversity.git

pour tout installer :

- dans le repertoire vms :
vagrant up
vagrant ssh app
Mot de passe: vagrant
Puis ajouter votre clef publique dans .ssh/authorized_keys
ssh-copy-id -i ~/.ssh/id_rsa.pub vagrant@192.168.56.10
Si vous êtes sous windows, copiez la d'abord sous linux scp ~/.ssh/id_rsa.pub vagrant@192.168.56.10:~/.ssh/id_rsa.pub
Reproduire cela avec 
vagrant ssh db
vagrant ssh tools

Créer un utilisateur chef
Reproduire la même chose pour l'utilisateur chef

- tester que vous pouvez bien faire
ssh vagrant@192.168.56.10
ssh vagrant@192.168.56.11
sans invite de mot de passe (et mettez le yes pour le know hosts)

sur chaque vm : sudo apt-get install curl (la box que j'ai pris l'a pas par defaut…)
sur chaque vm : sudo apt-get install git

clonez master-cap en local
git clone git@github.com:kitchenware/master-cap.git


ensuite faire gem install bundler

ensuite se placer à la racine de perfuniversity

faire : export DEV=1
puis taper :  bundle install

modifier le gemfile pour faire correspondre le local de master-cap à votre clone

conseil : installer un offline-proxy (https://github.com/bpaquet/offline-proxy git clone puis node proxy.js, puis changez l'ip dans topology/devoxx.yml)
sinon commenter la ligne :http_proxy: 'http://192.168.56.1:3128' dans topology/devoxx.yml

puis :

ensuite (installation de chef/master-chef dans les vms):

cap appserver-devoxx chef:install -s user=vagrant
cap toolserver-devoxx chef:install -s user=vagrant

ensuite generation de la conf de la machine :

cap appserver-devoxx chef:generate_local_json
cap toolserver-devoxx chef:generate_local_json

puis on lance les installs :

cap appserver-devoxx chef
cap toolserver-devoxx chef

ou chef:local, mais faudra cloner master-cap et master-chef au même niveau que perfuniversity dans l'arbo


sur app server si vous deployez l'appli dans l'instance tomcat (/opt/tomcat/instance ...)
ce sera accessible sur http://192.168.56.10:8080/happystore

sur tool server le jenkins est sur htpt://192.168.56.11/jenkins

et le graphite est là http://192.168.56.11:81
